name: CD

on:
  repository_dispatch:
    types: [cd]

defaults:
  run:
    shell: pwsh

env:
  dotnet-version: "3.1.x"
  node-version: "12.x"
  build_version: "0.0.1.${{ github.run_number }}-preview"

jobs:
  pub-pkgs:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnet-version }}
    - name: Setup NodeJS
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.node-version }}
    - name: Install dev deps
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.AZ_TOKEN }}
      run: pwsh -c ./tools.ps1 dev-deps
    - name: Restore
      run: pwsh -c ./tools.ps1 restore
    - name: Build
      run: dotnet build -c Release /p:Version=${env:build_version}
    - name: Pack
      run: pwsh -c ./tools.ps1 pack
    - name: Upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: packages
        path: ./packages
    - name: Deploy
      run: |
        dotnet nuget push ./packages/AcBlog.UI.Components.Core.$env:build_version.nupkg -s aza -k az
        if (!$?) { exit 1 }
        dotnet nuget push ./packages/AcBlog.UI.Components.Loading.$env:build_version.nupkg -s aza -k az
        if (!$?) { exit 1 }
        dotnet nuget push ./packages/AcBlog.UI.Components.Markdown.$env:build_version.nupkg -s aza -k az
        if (!$?) { exit 1 }
        dotnet nuget push ./packages/AcBlog.UI.Components.Slides.$env:build_version.nupkg -s aza -k az
        if (!$?) { exit 1 }
        dotnet nuget push ./packages/AcBlog.UI.Components.Modal.$env:build_version.nupkg -s aza -k az
        if (!$?) { exit 1 }
        dotnet nuget push ./packages/AcBlog.UI.Components.Toast.$env:build_version.nupkg -s aza -k az
        if (!$?) { exit 1 }
  invoke-repo-update:
    needs: [pub-pkgs]
    strategy:
      matrix:
        repo: ['acblog/cdn']
    runs-on: ubuntu-latest
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PA_TOKEN }}
          repository: ${{ matrix.repo }}
          event-type: update